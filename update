# update.asm
# Update the game state

    .text
    .globl update_game
    .extern card_values
    .extern card_states

update_game:
    # Save return address
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    # Load card values
    la $t0, card_values
    add $t1, $t0, $s0             # First card address
    lb $t2, 0($t1)                # First card value
    add $t3, $t0, $s1             # Second card address
    lb $t4, 0($t3)                # Second card value
    
    # Check if cards match (difference of 4)
    sub $t5, $t4, $t2
    abs $t5, $t5                  # Absolute difference
    beq $t5, 4, cards_match
    
    # Cards don't match
    li $t6, 0                     # Set state back to hidden
    j update_states

cards_match:
    li $t6, 2                     # Set state to matched

update_states:
    la $t0, card_states
    add $t1, $t0, $s0             # First card state address
    sb $t6, 0($t1)                # Update first card
    add $t1, $t0, $s1             # Second card state address
    sb $t6, 0($t1)                # Update second card
    
    # Restore return address
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra
